# -*- coding: utf-8 -*-
"""Histogram.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lTi_V30ceVM5qNhyBvHF-0XVxCJS6rn-
"""

import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns
import pandas as pd
from google.colab import drive
drive.mount('/content/gdrive')
path = '/content/gdrive/My Drive/Visualization/Data/'
path_img = '/content/gdrive/My Drive/Visualization/Images/'

# loading and preparing data
tips=sns.load_dataset('tips')

# plot size setting
fig, ax = plt.subplots(figsize =(9, 7)) 

# drawing plot
a = sns.distplot(tips['total_bill'], bins = 20)

# background setting
sns.set(style='white')

# title and size
a.axes.set_title("Title",fontsize=20,pad = 10)

# x,y abel and size
a.set_xlabel("X Label",fontsize=15)
a.set_ylabel("Y Label",fontsize=15)

# ticks and size
a.tick_params(labelsize=12)

# here is "True", "False" to removing top and right borders
ax.spines['top'].set_visible(True)
ax.spines['right'].set_visible(True)

# save image as pdf to path folder
# bbox in inches, only the given portion of the figure is saved, figure out the tight bbox of the figure
plt.savefig(path_img+'hist1.pdf', bbox_inches='tight')
# showing the image
plt.show()

# loading and preparing data
data = np.random.multivariate_normal([0, 0], [[5, 2], [2, 2]], size=2000)
data = pd.DataFrame(data, columns=['x', 'y'])

# plot size setting 
fig, ax = plt.subplots(figsize =(9, 7)) 

# drawing plot
b = sns.distplot(data['x'],label = 'x')
sns.distplot(data['y'], label = 'y')

# background setting 
sns.set(style='darkgrid')

# title and size
b.axes.set_title("Title",fontsize=20,pad = 10)

# x,y label and size
b.set_xlabel("X Label",fontsize=15)
b.set_ylabel("Y Label",fontsize=15)

# ticks and size
b.tick_params(labelsize=12)

# here is "True", "False" to removing top and right borders
ax.spines['top'].set_visible(True)
ax.spines['right'].set_visible(True)



# save image as pdf to path folder
# bbox in inches, only the given portion of the figure is saved, figure out the tight bbox of the figure
plt.savefig(path_img+'hist2.pdf', bbox_inches='tight')
# showing the image
plt.show()

