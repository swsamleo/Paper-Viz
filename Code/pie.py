# -*- coding: utf-8 -*-
"""Pie.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17zWvvMWcgyWDqjTji1TaxAhaeiNQ7qN2
"""

import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
from google.colab import drive
drive.mount('/content/gdrive')
pathconf = '/content/gdrive/My Drive/Visualization/parameter.conf'
path = '/content/gdrive/My Drive/Visualization/Data/'
path_img = '/content/gdrive/My Drive/Visualization/Images/'

# loading and preparing data
df = pd.DataFrame({'name': ['a','b','c','d','e'],
                   'value':[10,20,30,25,15]})

# random color labels setting 
N=5
radii = 10 * np.random.rand(N)
colors = plt.cm.viridis(radii / 10.)
color = ['black']

# "explode" the 2nd slice
explode = (0, 0.05, 0, 0, 0)  

# drawing plot
# size setting
fig, ax = plt.subplots(figsize=(10,6))

# title and size
ax.set_title('Title',fontsize=18,loc='center', pad = 10)

ax.pie(df['value'].values.tolist(), explode=explode,colors=colors,labels=df['name'].values.tolist(),autopct='%1.1f%%',
        shadow=True, startangle=90,textprops={'fontsize':14}, wedgeprops={'linewidth':0.5,'edgecolor': color[0] })

# equal aspect ratio ensures that pie is drawn as a circle
ax.axis('equal') 

# legend
plt.legend(ncol=1 )

# tight layout setting 
plt.tight_layout()

# save image as pdf to path folder
# bbox in inches, only the given portion of the figure is saved, figure out the tight bbox of the figure
plt.savefig(path_img+'pie1.pdf', bbox_inches='tight')
# showing the image
plt.show()

# loading and preparing data
df = pd.DataFrame({'name': ['a','b','c','d','e'],
                   'value':[10,20,30,25,15]})
# random color labels setting 
N=5
radii = 10 * np.random.rand(N)
colors = plt.cm.viridis(radii / 10.)
color = ['white']

# "explode" the 2nd slice
explode = (0, 0.1, 0, 0, 0)  
fig, ax = plt.subplots(figsize=(10,6))

# title and size
ax.set_title('Title',fontsize=18,loc='center', pad = 10)

# drawing plot
# marking values on the graph
ax.pie(df['value'].values.tolist(), explode=explode,colors = colors,labels=df['name'].values.tolist(),autopct='%1.1f%%',
        shadow=False, startangle=90,textprops={'fontsize': 14})

# drawing circle
centre_circle = plt.Circle((0,0),0.70,fc=color[0])
fig = plt.gcf()
fig.gca().add_artist(centre_circle)

# equal aspect ratio ensures that pie is drawn as a circle
ax.axis('equal') 

# legend
plt.legend(ncol=1 )

#  tight layout setting
plt.tight_layout()

# save image as pdf to path folder
# bbox in inches, only the given portion of the figure is saved, figure out the tight bbox of the figure
plt.savefig(path_img+'pie2.pdf', bbox_inches='tight')
# showing the image
plt.show()

