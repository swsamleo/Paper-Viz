# -*- coding: utf-8 -*-
"""Area.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rGfWgmTtczymf80mTATjP57m3k3NYk-I

# Area Chart
"""

import pandas as pd
import csv
from collections import defaultdict
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from google.colab import drive
drive.mount('/content/gdrive')
path = '/content/gdrive/My Drive/Visualization/Data/'
path_img = '/content/gdrive/My Drive/Visualization/Images/'

# loading and preparing data
data1 = defaultdict(list)
with open(path + 'Fig3.csv','r') as f:
    reader = csv.reader(f)
    header = next(reader,None)
    for line in reader:
        data1[line[0]] = [float(i) for i in line[1:]]

# color labels setting 
colors = ['lightgreen','slateblue','skyblue','lightpink']
color = ['white','RdYlBu','black']

# backgroud setting
sns.set(style = color[0])
sns.set_palette(color[1], n_colors=4)

# range of x setting 
x1=range(0,500)
# setting range of y
y1=[data1['weekday_morning'],data1['weekday_afternoon'],data1['weekend_morning'],data1['weekend_afternoon']]

# legend labels setting
labels=['weekday morning','weekday afternoon','weekend morning','weekend afternoon']

# plot size setting
fig, ax = plt.subplots(figsize=(12,8))

# drawing plot
# drawing event lines
ax.axhline(linewidth=0.5)
# filling areas
for i in range(len(y1)):
    plt.fill_between(x1, y1[i],label = labels[i],alpha = 0.4)
# drawing lines
for i in range(len(y1)):
    plt.plot(x1,y1[i], linewidth=0.8, alpha = 0.6, color = color[2])

# title and size
ax.set_title('Title',fontsize=22,pad = 18)

# x,y label and size
plt.xlabel("X_label",fontsize=18)
plt.ylabel("group",fontsize=18)

# x,y axis' range setting
plt.xlim((0,500))
plt.ylim((0,1))

# legend's position setting
plt.legend(loc='upper right')

# save image as pdf to path folder
# bbox in inches, only the given portion of the figure is saved, figure out the tight bbox of the figure
plt.savefig(path_img+'area.pdf', bbox_inches='tight')
# showing the image
plt.show()

# loading and preparing data
data2 = defaultdict(list)
with open(path+'clu_Prob_D.csv','r') as f:
    reader = csv.reader(f)
    header = next(reader,None)
    for line in reader:
        data2[line[0]] = [float(i) for i in line[1:]]

# color labels setting
color = ['white','RdYlBu','grey']

# backgroud setting 
sns.set(style = color[0])
sns.set_palette(color[1],n_colors=5)

# range of x setting
x2=range(0,500)
# range of y setting
y11=[data2['0'],data2['-1']]
y12=[data2['1'],data2['2']]
y21=[data2['3'],data2['4'],data2['5'],data2['6'],data2['7']]
y22=[data2['8'],data2['9']]
# setting legend labels
labels=[['0','1'],['0','1'],['0','1','2','3','4'],['0','1']]

# drawing plot
# drawing event lines
ax.axhline(linewidth=0.5)

# title and size
ax.set_title('Title',fontsize=22,pad = 18)

# plot size setting
fig, ((ax1, ax2), (ax3, ax4)) = plt.subplots(2, 2, figsize = (12,8))
for i in range(len(y11)):
    ax1.fill_between(x2, y11[i],label = labels[0][i],alpha = 0.4)
for i in range(len(y12)):
    ax2.fill_between(x2, y12[i],label = labels[1][i],alpha = 0.4)
for i in range(len(y21)):
    ax3.fill_between(x2, y21[i],label = labels[2][i],alpha = 0.4)
for i in range(len(y22)):
    ax4.fill_between(x2, y22[i],label = labels[3][i],alpha = 0.4)

for i in range(len(y11)):
    ax1.plot(x2,y11[i], linewidth=0.8, alpha = 1, color = color[2])
for i in range(len(y11)):
    ax2.plot(x2,y12[i], linewidth=0.8, alpha = 1, color = color[2])
for i in range(len(y21)):
    ax3.plot(x2,y21[i], linewidth=0.8, alpha = 1, color = color[2])
for i in range(len(y11)):
    ax4.plot(x2,y22[i], linewidth=0.8, alpha = 1, color = color[2])

# legend's position setting
ax1.legend(loc='upper right',prop={'size': 8})
ax2.legend(loc='upper right',prop={'size': 8})
ax3.legend(loc='upper right',prop={'size': 8})
ax4.legend(loc='upper right',prop={'size': 8})

# range of each subplot's x,y axis setting
ax1.set_xlim([0, 500])
ax1.set_ylim([0, 1])
ax2.set_xlim([0, 500])
ax2.set_ylim([0, 1])
ax3.set_xlim([0, 500])
ax3.set_ylim([0, 1])
ax4.set_xlim([0, 500])
ax4.set_ylim([0, 1])

# save image as pdf to path folder
# bbox in inches, only the given portion of the figure is saved, figure out the tight bbox of the figure
plt.savefig(path_img+'area_grouped.jpg', bbox_inches='tight')
# showing the image
plt.show()

